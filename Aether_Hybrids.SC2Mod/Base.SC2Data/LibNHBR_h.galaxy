include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Network Hybrid Race
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libNHBR_ge_CustomValueIndexes_TimeScaleEnergyUsage = 0;
const int libNHBR_ge_CustomValueIndexes_TimeScaleDrainingEnergy = 1;
const int libNHBR_ge_CustomValueIndexes_ProtectionSpellArmor = 2;
const int libNHBR_ge_HybridNavigatorCargoUI_Size1 = 0;
const int libNHBR_ge_HybridNavigatorCargoUI_Size2 = 1;
const int libNHBR_ge_HybridNavigatorCargoUI_Size4 = 2;
const int libNHBR_ge_HybridNavigatorCargoUI_Size8 = 3;
const int libNHBR_ge__UnitDataType_Actor = 0;
const int libNHBR_ge__UnitDataType_Integer = 1;
const int libNHBR_ge__UnitDataType_Ping = 2;
const int libNHBR_ge__UnitDataType_Point = 3;
const int libNHBR_ge__UnitDataType_Region = 4;
const int libNHBR_ge__UnitDataType_TextTag = 5;
const int libNHBR_ge__UnitDataType_Unit = 6;
const int libNHBR_ge__UnitDataType_UnitGroup = 7;

// Constants
const int libNHBR_gv_c_UNIT_REVIVE_MAX = 100;
const int libNHBR_gv_hybridBuildControllerMaxOrderCount_C = 31;
const int libNHBR_gv_hybridNetworkMaximumPowerSourcesInNetwork = 12;
const int libNHBR_gv_hybridNetworkPowerSourceUnitTypeMaxCount_C = 3;
const fixed libNHBR_gv_hybridTeleportConstructionTime = 14.0;
const int libNHBR_gv_hybridTimeScaleBuffMaxScale_C = 100;
const fixed libNHBR_gv_hybridTimeScaleBuffMaximumEnergyPerUsage_Structure_C = 20.0;
const fixed libNHBR_gv_hybridTimeScaleBuffMaximumEnergyPerUsage_Minion_C = 40.0;
const fixed libNHBR_gv_hybridTimeScaleBuffMaximumTimeScaleBonus_C = 1.0;
const int libNHBR_gv_bALMaxEnginePlayerCount = 15;

// Variable Declarations
string[libNHBR_gv_c_UNIT_REVIVE_MAX + 1][16] libNHBR_gv_deathUnits;
unit[libNHBR_gv_c_UNIT_REVIVE_MAX + 1][16] libNHBR_gv_deathCorpseUnits;
fixed libNHBR_gv_hybridBuildControllerRange;
order[libNHBR_gv_hybridBuildControllerMaxOrderCount_C + 1] libNHBR_gv_dEBUGOrderListBefore;
order[libNHBR_gv_hybridBuildControllerMaxOrderCount_C + 1] libNHBR_gv_dEBUGOrderListAfter;
order libNHBR_gv_dEBUGFirstOrder;
int[libNHBR_gv_bALMaxEnginePlayerCount + 1] libNHBR_gv_hybridNetworkNewCurrentChargedAmount;
unitgroup[libNHBR_gv_bALMaxEnginePlayerCount + 1] libNHBR_gv_hybridNetworkNewPowerSourceUnitGroup;
string[libNHBR_gv_hybridNetworkPowerSourceUnitTypeMaxCount_C + 1] libNHBR_gv_hybridNetworkPowerSourceUnitType;
int[libNHBR_gv_bALMaxEnginePlayerCount + 1] libNHBR_gv_hybridNetworkNewCaseControllerStasisCell;
int[libNHBR_gv_bALMaxEnginePlayerCount + 1] libNHBR_gv_hybridNetworkNewCaseControllerProcessingCore;
int[libNHBR_gv_bALMaxEnginePlayerCount + 1] libNHBR_gv_hybridNetworkNewCaseControllerCrystallicShrine;
unitgroup[libNHBR_gv_bALMaxEnginePlayerCount + 1] libNHBR_gv_hybridTeleportUnitGroup;
unit[16] libNHBR_gv_hybridTeleportUnit;
string[libNHBR_gv_hybridTimeScaleBuffMaxScale_C + 1] libNHBR_gv_hybridTimeScaleBuff;
fixed libNHBR_gv_silentWeaponCooldown;
fixed libNHBR_gv_silentAttacksPerSecond;
string[4][16] libNHBR_gv_voidRiftUnitSpawns;

// Function Declarations
int libNHBR_gf_CustomValueIndex (int lp_customValue);
bool libNHBR_gf_HybridBuildControllerIsBuildOrder (order lp_order);
bool libNHBR_gf_HybridBuildControllerIsBuildOrderMain (order lp_order);
abilcmd libNHBR_gf_HybridBuildControllerReturnMainBuildAbilityCommand (order lp_order);
abilcmd libNHBR_gf_HybridBuildControllerReturnDefaultBuildAbilityCommand (order lp_order);
int libNHBR_gf_HybridBuildControllerClosestMainBuildAbilityCommandIndex (unit lp_minion);
fixed libNHBR_gf_HybridBuildControllerReturnBuildUnitRadius (order lp_order);
void libNHBR_gf_HybridTimeScaleBuffRemoveTimeScaleBuffFromUnit (unit lp_unit);
void libNHBR_gf_HybridTimeScaleBuffAddTimeScaleBuffToUnitFromUnit (unit lp_casterUnit, fixed lp_casterEnergyPerUsage, unit lp_targetUnit);
fixed libNHBR_gf_HybridTimeScaleBuffCalculateEnergyUsageForUnit (unit lp_unit);
fixed libNHBR_gf_HybridTimeScaleBuffBoosterPercentBuff (unit lp_casterUnit, fixed lp_casterEnergyPerUsage);
fixed libNHBR_gf_HybridTimeScaleBuffUnitConstructionTime (unit lp_unit, string lp_ability);
fixed libNHBR_gf_HybridTimeScaleBuffUpgradeResearchTime (string lp_upgrade, unit lp_unit);
bool libNHBR_gf_VoidRiftUpgrade (string lp_upgrade);
void libNHBR_gf_VoidRiftVariables ();
string libNHBR_gf__UnitDataName (int lp_type, unit lp_unit, int lp_index);
void libNHBR_gf_StoreActorForUnit (unit lp_unit, int lp_index, actor lp_actor);
actor libNHBR_gf_ActorStoredForUnit (unit lp_unit, int lp_index);
void libNHBR_gf_StoreTextTagForUnit (unit lp_unit, int lp_index, int lp_textTag);
int libNHBR_gf_TextTagStoredForUnit (unit lp_unit, int lp_index);
void libNHBR_gf_StorePointForUnit (unit lp_unit, int lp_index, point lp_point);
point libNHBR_gf_PointStoredForUnit (unit lp_unit, int lp_index);
void libNHBR_gf_StoreRegionForUnit (unit lp_unit, int lp_index, region lp_region);
region libNHBR_gf_RegionStoredForUnit (unit lp_unit, int lp_index);
void libNHBR_gf_StorePingForUnit (unit lp_unit, int lp_index, int lp_ping);
int libNHBR_gf_PingStoredForUnit (unit lp_unit, int lp_index);
void libNHBR_gf_StoreIntegerForUnit (unit lp_unit, int lp_index, int lp_value);
int libNHBR_gf_IntegerStoredForUnit (unit lp_unit, int lp_index);
void libNHBR_gf_StoreUnitForUnit (unit lp_unit, int lp_index, unit lp_value);
unit libNHBR_gf_UnitStoredForUnit (unit lp_unit, int lp_index);
void libNHBR_gf_StoreUnitGroupForUnit (unit lp_unit, int lp_index, unitgroup lp_value);
unitgroup libNHBR_gf_UnitGroupStoredForUnit (unit lp_unit, int lp_index);
void libNHBR_gf_RemoveDataFromUnit (string lp__UnitDataName, unit lp_unit);
void libNHBR_gf_UpgradeButtontoButtonForPlayer (string lp_sourceButton, string lp_targetButton, int lp_player);
void libNHBR_gf_UpgradeUnittoUnitForPlayer (string lp_sourceUnit, string lp_targetUnit, int lp_player);
bool libNHBR_gf_RunValidatorOnUnit (string lp_validator, unit lp_sourceUnit, unit lp_targetUnit);

// Trigger Declarations
trigger libNHBR_gt_VoidReanimateRevive;
trigger libNHBR_gt_VoidReanimatorUnitDeath;
trigger libNHBR_gt_MapInit;
trigger libNHBR_gt_VoidRiftIdleUnits2OnOff;
trigger libNHBR_gt_OfflineTestingResetPlayer2Resource;
trigger libNHBR_gt_InitializeNetworkHybridRace;
trigger libNHBR_gt_HybridBuildController;
trigger libNHBR_gt_HybridNetworkNewCalculate;
trigger libNHBR_gt_HybridNetworkPowerSourceUnitTypeInitialization;
trigger libNHBR_gt_HybridNetworkNewCaseController;
trigger libNHBR_gt_HybridNetworkNewCaseControllerRemoved;
trigger libNHBR_gt_HybridProtectionUpdateArmorDataProperty;
trigger libNHBR_gt_HybridLifeForceUpdateArmorDataProperty;
trigger libNHBR_gt_HybridLifeForceUpdateArmorDataProperty2;
trigger libNHBR_gt_HybridTeleportOverrideTPTime;
trigger libNHBR_gt_HybridTeleportdummyTransferTargetUnit;
trigger libNHBR_gt_HybridTeleportdummyMoveTransferTargetUnit;
trigger libNHBR_gt_HybridTeleportTurnTargetingOrderOn;
trigger libNHBR_gt_HybridTeleportTurnTargetingOrderOff;
trigger libNHBR_gt_HybridTeleportConstructionProgressIonicFakeBuildCancel;
trigger libNHBR_gt_HybridTeleportConstructionProgress;
trigger libNHBR_gt_HybridTeleportTransferDamage;
trigger libNHBR_gt_HybridTimeScaleBuffInitialization;
trigger libNHBR_gt_HybridTimeScaleBuffCommonConstructionStarted;
trigger libNHBR_gt_HybridTimeScaleBuffCommonConstructionCompleted;
trigger libNHBR_gt_HybridTimeScaleBuffCommonConstructionCanceled;
trigger libNHBR_gt_HybridTimeScaleBuffMinionConstructionResumed;
trigger libNHBR_gt_HybridTimeScaleBuffMinionConstructionPaused;
trigger libNHBR_gt_HybridTimeScaleBuffStructureTrainingStarted;
trigger libNHBR_gt_HybridTimeScaleBuffStructureTrainingCompleted;
trigger libNHBR_gt_HybridTimeScaleBuffStructureTrainingCancelled;
trigger libNHBR_gt_HybridTimeScaleBuffStructureResearchStarted;
trigger libNHBR_gt_HybridTimeScaleBuffStructureResearchCompleted;
trigger libNHBR_gt_HybridTimeScaleBuffStructureResearchCancelled;
trigger libNHBR_gt_HybridDominatorUpgradeToAdvancedDominator;
trigger libNHBR_gt_HybridReaverUpgradeToAdvancedReaver;
trigger libNHBR_gt_HybridNemesisUpgradeToAdvancedNemesis;
trigger libNHBR_gt_SilentWeaponBuff;
trigger libNHBR_gt_HybridNavigatorCargoUI;
trigger libNHBR_gt_HybridReaverConsumeDNAAutocastOn;
trigger libNHBR_gt_HybridReaverConsumeDNAAutocastOff;
trigger libNHBR_gt_HybridVoidRiftCargoUI;
trigger libNHBR_gt_VoidRiftSpawn;
trigger libNHBR_gt_VoidRiftUpgrades;
trigger libNHBR_gt_VoidRiftIdleUnits;

// Library Initialization
void libNHBR_InitVariables ();

